// Code generated by MockGen. DO NOT EDIT.
// Source: src/producers/image_uploaded.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageUploadedProducer is a mock of ImageUploadedProducer interface.
type MockImageUploadedProducer struct {
	ctrl     *gomock.Controller
	recorder *MockImageUploadedProducerMockRecorder
}

// MockImageUploadedProducerMockRecorder is the mock recorder for MockImageUploadedProducer.
type MockImageUploadedProducerMockRecorder struct {
	mock *MockImageUploadedProducer
}

// NewMockImageUploadedProducer creates a new mock instance.
func NewMockImageUploadedProducer(ctrl *gomock.Controller) *MockImageUploadedProducer {
	mock := &MockImageUploadedProducer{ctrl: ctrl}
	mock.recorder = &MockImageUploadedProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageUploadedProducer) EXPECT() *MockImageUploadedProducerMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockImageUploadedProducer) Publish(images []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", images)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockImageUploadedProducerMockRecorder) Publish(images interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockImageUploadedProducer)(nil).Publish), images)
}
